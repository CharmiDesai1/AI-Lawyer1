{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiwar\\\\Documents\\\\Desktop stuff\\\\ai_lawyer2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState(null);\n  //message is an object, which is given value null initially but otherwise \n  //if we want to assign any value to it we will do it through setMessage function \n  const [message, setMessage] = useState(null);\n  const [previousChats, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n  const createNewChat = () => {\n    setMessage(null);\n    set;\n  };\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: value\n      })\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // console.log(message);\n  //whenever message changes this will run\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(previousChats =>\n      //open previousChats and add two objects\n      [...previousChats, {\n        title: currentTitle,\n        role: \"user\",\n        content: value\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message, currentTitle]);\n  console.log(previousChats);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewChat,\n        children: \"+ New chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Made by Swati\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"ahgs shdsde bjbjshdbh kjzxkjcxnbjj bh ht. hdsah jhdda djddd jdjh cjd jdjh kgto jhur chd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9WYKqOll1nj2EK2vvXRqQ0Y7iCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","createNewChat","set","getMessages","options","method","headers","body","JSON","stringify","response","fetch","data","json","choices","error","console","log","title","role","content","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","id","_c","$RefreshReg$"],"sources":["C:/Users/tiwar/Documents/Desktop stuff/ai_lawyer2/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [value, setValue] = useState(null);\n  //message is an object, which is given value null initially but otherwise \n  //if we want to assign any value to it we will do it through setMessage function \n  const [message, setMessage] = useState(null);\n  const[previousChats, setPreviousChats] = useState([]);\n  const[currentTitle, setCurrentTitle] = useState(null);\n\n  const createNewChat = () =>{\n    setMessage(null);\n    set\n  }\n\n  const getMessages = async () => {\n    const options = {\n      method : \"POST\",\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify({\n        message : value\n      })\n    }\n    try{\n        const response = await fetch('http://localhost:8000/completions', options);\n        const data = await response.json();\n        setMessage(data.choices[0].message);\n    }catch(error){\n      console.error(error);\n    }\n  }\n\n  // console.log(message);\n  //whenever message changes this will run\n  useEffect(() => {\n    console.log(currentTitle, value, message);\n    if(!currentTitle && value && message)\n    {\n      setCurrentTitle(value);\n    }\n    if(currentTitle && value && message)\n    {\n      setPreviousChats(previousChats => (\n        //open previousChats and add two objects\n      [...previousChats, {\n          title: currentTitle,\n          role : \"user\",\n          content : value\n      },{\n        title: currentTitle,\n        role : message.role,\n        content : message.content\n      }]\n      ))\n    }\n  }, [message, currentTitle])\n\n  console.log(previousChats);\n\n\n  return (\n    <div className=\"app\">\n\n      <section className=\"side-bar\">\n        <button onClick = {createNewChat}>+ New chat</button>\n        <ul className=\"history\"></ul>\n        <nav>\n          <p>Made by Swati</p>\n        </nav>\n      </section>\n\n      <section className=\"main\">\n        {/* it will be displayed only when there is no currentTitle  */}\n        {!currentTitle && <h1>MyGPT</h1>}\n        <ul className=\"feed\">\n\n        </ul>\n        <div className=\"bottom-container\">\n          <div className=\"input-container\">\n            {/* initially value of the input would be value which initially is null  */}\n            {/* e is the event  */}\n            <input value = {value} onChange={(e) => setValue(e.target.value)}/>\n            <div id = \"submit\" onClick={getMessages}>&#10146;</div>\n          </div>\n          <p className=\"info\">\n            ahgs shdsde bjbjshdbh kjzxkjcxnbjj bh ht.\n            hdsah jhdda djddd jdjh cjd jdjh kgto jhur chd\n          </p>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}